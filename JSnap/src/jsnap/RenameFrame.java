package jsnap;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Vasilis
 */
public class RenameFrame extends JFrame{

    private static final int WIDTH = 350;
    private static final int HEIGHT = 220;
    private static final Character[] invalidCharacters = {'\\','/',':','*','?','"','"','<','>','|'};

    private JPanel panel;
    private JLabel oldNameLabel;
    private JLabel newNameLabel;
    private JTextField oldNameField;
    private JTextField newNameField;
    private JButton renameButton;
    private JButton cancelButton;

    private ButtonListener buttonListener;

    private ImageCapture imageCapture;
    private MainFrame mainFrame;

    public RenameFrame(ImageCapture inputCapture, MainFrame inputFrame){

        imageCapture = inputCapture;
        mainFrame = inputFrame;

        initComponents();

        this.setContentPane(panel);

        this.setTitle("Rename");
        this.setVisible(true);
        this.setSize(WIDTH,HEIGHT);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    public void initComponents(){

        panel = new JPanel();

        oldNameLabel = new JLabel(LangManager.getString("label_current_name", "Current name: "));

        newNameLabel = new JLabel(LangManager.getString("label_new_name", "     New name:      "));
        newNameLabel.setHorizontalAlignment(JLabel.RIGHT);

        oldNameField = new JTextField();
        oldNameField.setPreferredSize(new Dimension(200,20));
        oldNameField.setEditable(false);
        oldNameField.setText(imageCapture.getFileName());

        newNameField = new JTextField();
        newNameField.setPreferredSize(new Dimension(205,20));

        buttonListener = new ButtonListener();

        renameButton = new JButton(LangManager.getString("button_rename", "Rename"));
        renameButton.addActionListener(buttonListener);

        cancelButton = new JButton(LangManager.getString("button_cancel", "Cancel"));
        cancelButton.addActionListener(buttonListener);

        panel.add(oldNameLabel);
        panel.add(oldNameField);
        panel.add(Box.createRigidArea(new Dimension(-18,50)));
        panel.add(newNameLabel);
        panel.add(newNameField);
        panel.add(Box.createRigidArea(new Dimension(520,60)));
        panel.add(renameButton);
        panel.add(Box.createRigidArea(new Dimension(50,0)));
        panel.add(cancelButton);
    }

    /*
    Inner class of the RenameFrame class that handles all events generated by
    the Swing buttons of this frame. Its main purpose is to validate the new
    name for the image and assign that name to the image.
    */

    public class ButtonListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent event) {

            if(event.getSource() == renameButton){

                if(!isNameValid(newNameField.getText())){
                    JOptionPane.showMessageDialog(panel,
                            LangManager.getString("onerror_button_rename", "Invalid name (Either empty field or illegal "
                            		+ "character with the name.)"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);

                    newNameField.setText("");
                }

                else{
                    imageCapture.setFileName(newNameField.getText());
                    JOptionPane.showMessageDialog(panel, LangManager.getString("onsuccess_button_rename", "File successfully renamed."), "Update", JOptionPane.INFORMATION_MESSAGE);
                    mainFrame.getInfoField().setText(imageCapture.getFileName());
                    dispose();
                }
            }

            if(event.getSource() == cancelButton){

                newNameField.setText("");
                dispose();
            }
        }

    }

    //Method to check whether the given name is valid or not.
    public boolean isNameValid(String name){

         if(name.length() == 0){
            return false;
        }
        else {
            for(int i=0; i<name.length(); i++){
                for(int j=0; j<invalidCharacters.length; j++){
                    if(name.charAt(i) == invalidCharacters[j]){
                        return false;
                    }
                }
            }
        }

         return true;
    }

}
